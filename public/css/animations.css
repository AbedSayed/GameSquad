
.fade-element {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease, transform 0.6s ease;
}

.fade-element.appear {
  opacity: 1;
  transform: translateY(0);
}

.fade-stagger > * {
  opacity: 0;
  transform: translateY(20px);
}

.fade-stagger.appear > * {
  opacity: 1;
  transform: translateY(0);
}

.fade-stagger.appear > *:nth-child(1) { transition: opacity 0.6s ease, transform 0.6s ease; }
.fade-stagger.appear > *:nth-child(2) { transition: opacity 0.6s ease 0.1s, transform 0.6s ease 0.1s; }
.fade-stagger.appear > *:nth-child(3) { transition: opacity 0.6s ease 0.2s, transform 0.6s ease 0.2s; }
.fade-stagger.appear > *:nth-child(4) { transition: opacity 0.6s ease 0.3s, transform 0.6s ease 0.3s; }
.fade-stagger.appear > *:nth-child(5) { transition: opacity 0.6s ease 0.4s, transform 0.6s ease 0.4s; }
.fade-stagger.appear > *:nth-child(6) { transition: opacity 0.6s ease 0.5s, transform 0.6s ease 0.5s; }

.hexagon-bg {
  position: relative;
  overflow: hidden;
}

.hexagon-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    repeating-linear-gradient(
      60deg, 
      rgba(126, 34, 206, 0.05) 0px, 
      rgba(126, 34, 206, 0.05) 1px, 
      transparent 1px, 
      transparent 30px
    ),
    repeating-linear-gradient(
      -60deg, 
      rgba(126, 34, 206, 0.05) 0px, 
      rgba(126, 34, 206, 0.05) 1px, 
      transparent 1px, 
      transparent 30px
    );
  z-index: -1;
}

.neon-text {
  color: #fff;
  text-shadow: 
    0 0 5px rgba(126, 34, 206, 0.8),
    0 0 10px rgba(126, 34, 206, 0.5),
    0 0 20px rgba(126, 34, 206, 0.3);
  animation: neonPulse 2s infinite alternate;
}

@keyframes neonPulse {
  from {
    text-shadow: 
      0 0 5px rgba(126, 34, 206, 0.8),
      0 0 10px rgba(126, 34, 206, 0.5),
      0 0 20px rgba(126, 34, 206, 0.3);
  }
  to {
    text-shadow: 
      0 0 10px rgba(126, 34, 206, 1),
      0 0 20px rgba(126, 34, 206, 0.8),
      0 0 30px rgba(126, 34, 206, 0.5),
      0 0 40px rgba(126, 34, 206, 0.3);
  }
}

.neon-text-secondary {
  color: #fff;
  text-shadow: 
    0 0 5px rgba(34, 211, 238, 0.8),
    0 0 10px rgba(34, 211, 238, 0.5),
    0 0 20px rgba(34, 211, 238, 0.3);
  animation: neonPulseSecondary 2s infinite alternate;
}

@keyframes neonPulseSecondary {
  from {
    text-shadow: 
      0 0 5px rgba(34, 211, 238, 0.8),
      0 0 10px rgba(34, 211, 238, 0.5),
      0 0 20px rgba(34, 211, 238, 0.3);
  }
  to {
    text-shadow: 
      0 0 10px rgba(34, 211, 238, 1),
      0 0 20px rgba(34, 211, 238, 0.8),
      0 0 30px rgba(34, 211, 238, 0.5),
      0 0 40px rgba(34, 211, 238, 0.3);
  }
}

.glitch {
  position: relative;
  animation: glitchText 3s infinite;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.8;
}

.glitch::before {
  animation: glitchEffect 4s infinite;
  color: #00fffc;
  z-index: -1;
}

.glitch::after {
  animation: glitchEffect 2s infinite;
  color: #ff00ff;
  z-index: -2;
}

@keyframes glitchText {
  0% { transform: translate(0) }
  20% { transform: translate(-1px, 1px) }
  40% { transform: translate(-1px, -1px) }
  60% { transform: translate(1px, 1px) }
  80% { transform: translate(1px, -1px) }
  100% { transform: translate(0) }
}

@keyframes glitchEffect {
  0% { transform: translate(0) }
  20% { transform: translate(-2px, 2px) }
  40% { transform: translate(-2px, -2px) }
  60% { transform: translate(2px, 2px) }
  80% { transform: translate(2px, -2px) }
  100% { transform: translate(0) }
}

.float {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

.pulse-glow {
  animation: pulseGlow 3s infinite;
}

@keyframes pulseGlow {
  0% {
    box-shadow: 0 0 5px rgba(126, 34, 206, 0.5), 0 0 10px rgba(126, 34, 206, 0.3);
  }
  50% {
    box-shadow: 0 0 15px rgba(126, 34, 206, 0.7), 0 0 20px rgba(126, 34, 206, 0.5);
  }
  100% {
    box-shadow: 0 0 5px rgba(126, 34, 206, 0.5), 0 0 10px rgba(126, 34, 206, 0.3);
  }
}

.cyber-grid {
  position: relative;
  overflow: hidden;
}

.cyber-grid::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(to right, rgba(126, 34, 206, 0.1) 1px, transparent 1px) 0 0 / 20px 20px,
    linear-gradient(to bottom, rgba(126, 34, 206, 0.1) 1px, transparent 1px) 0 0 / 20px 20px;
  z-index: -1;
  transform: perspective(500px) rotateX(30deg);
  transform-origin: center bottom;
  animation: gridMove 15s linear infinite;
}

@keyframes gridMove {
  to {
    background-position: 0 20px, 0 0;
  }
}

.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(126, 34, 206, 0.3);
  border-radius: 50%;
  border-top-color: #7e22ce;
  animation: spin 1s ease-in-out infinite;
  box-shadow: 0 0 10px rgba(126, 34, 206, 0.5);
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.game-card {
  transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
}

.game-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    135deg,
    rgba(126, 34, 206, 0) 0%,
    rgba(126, 34, 206, 0.1) 50%,
    rgba(126, 34, 206, 0) 100%
  );
  opacity: 0;
  transition: opacity 0.5s ease;
  z-index: 1;
  pointer-events: none;
}

.game-card:hover {
  transform: translateY(-10px) scale(1.02);
}

.game-card:hover::after {
  opacity: 1;
  animation: cardGlow 2s infinite;
}

@keyframes cardGlow {
  0% {
    background-position: -100% -100%;
  }
  100% {
    background-position: 200% 200%;
  }
}

.btn-hover-fx {
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn-hover-fx::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: left 0.7s;
  z-index: -1;
}

.btn-hover-fx:hover::before {
  left: 100%;
}

.typewriter {
  overflow: hidden;
  border-right: 0.15em solid var(--primary);
  white-space: nowrap;
  margin: 0 auto;
  letter-spacing: 0.1em;
  animation: 
    typing 3.5s steps(40, end),
    blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: var(--primary) }
}

.glow-hover {
  transition: all 0.3s ease;
}

.glow-hover:hover {
  box-shadow: 0 0 15px rgba(126, 34, 206, 0.7);
}

.rotating-border {
  position: relative;
  border-radius: 10px;
  overflow: hidden;
}

.rotating-border::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: conic-gradient(
    transparent, 
    transparent, 
    transparent, 
    var(--primary)
  );
  animation: rotate 4s linear infinite;
  z-index: -1;
}

.rotating-border::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  right: 2px;
  bottom: 2px;
  background: var(--bg-dark);
  border-radius: 8px;
  z-index: -1;
}

@keyframes rotate {
  100% {
    transform: rotate(1turn);
  }
}

.sheen {
  position: relative;
  overflow: hidden;
}

.sheen::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.3) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: skewX(-25deg);
  animation: sheen 6s infinite;
}

@keyframes sheen {
  0% {
    left: -100%;
  }
  20% {
    left: 100%;
  }
  100% {
    left: 100%;
  }
}

.reveal {
  position: relative;
  overflow: hidden;
}

.reveal span {
  display: block;
}

.reveal::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--primary);
  transform: translateX(-100%);
  animation: revealText 1.5s cubic-bezier(0.77, 0, 0.175, 1) forwards;
}

@keyframes revealText {
  0% {
    transform: translateX(-100%);
  }
  50% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(100%);
  }
}

.hover-3d {
  transition: all 0.3s ease;
  transform-style: preserve-3d;
}

.hover-3d:hover {
  transform: perspective(500px) rotateX(10deg) rotateY(-10deg) translateZ(10px);
}

.power-button {
  position: relative;
  border-radius: 50%;
}

.power-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(126, 34, 206, 0.7) 0%, transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.power-button:hover::before {
  opacity: 1;
  animation: powerPulse 2s infinite;
}

@keyframes powerPulse {
  0% {
    transform: scale(0.8);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.3;
  }
  100% {
    transform: scale(0.8);
    opacity: 0.7;
  }
} 